{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sparrow SMS API 2.0 Documentation","text":"<p><code>Last updated - 13th March, 2020</code></p> <p>      Login or Create Account for free     by visiting our      SMS Dashboard </p> <p></p> <p>Sparrow SMS is a leading VAS Provider based in Nepal. It currently provides SMS Gateway connectivity with the telecom operators of Nepal, currently supporting the following operators</p> <p><code>1. Nepal Telecom (GSM + CDMA)</code> <code>2. Ncell</code> <code>3. United Telecom</code> <code>4. Smart Telecom</code> </p>"},{"location":"#sms-api","title":"SMS API","text":"<p>Sparrow SMS provides both MT and MO APIs and supports with integration when required. Sparrow SMS Bulk SMS API (Version 2.0) is a RESTful API for sending Bulk SMS in Nepal.</p> <p>Explore the SMS API Documentation</p>"},{"location":"#enterprise-messaging-suite","title":"Enterprise Messaging Suite","text":"<p>Sparrow SMS has recently launched its enterprise messaging suite for the following services</p> <ul> <li>Viber Business Messaging service for Nepal</li> <li>International SMS</li> </ul> <ul> <li>Viber Bot and BOT applications (W.I.P)</li> <li>Whatsapp Messaging service (Planned)</li> </ul> <p>Explore the Enterprise Messaging API Documentation</p>"},{"location":"#contact-details","title":"Contact Details:","text":"<p>Email: marketing@janakitech.com Phone: 01-5422942 / 9802005008</p> <p>Jump to Examples</p>"},{"location":"enterprise/authentication-flow/","title":"Enterprise Application Authentication Flow","text":"<p>API Endpoint</p> <ul> <li>https://ent-api.sparrowsms.com/</li> </ul> <p>Dashboard</p> <ul> <li>https://ent.sparrowsms.com</li> </ul>"},{"location":"enterprise/authentication-flow/#authorization-headers","title":"Authorization Headers","text":"<p><code>Authorization : Bearer xxxxxxxxxxxxxxxxxxxx</code></p> <p>Bearer token is required in the headers for the API authentication. To receive the Bearer authorization token, the API token and Partner token shall be required. </p> Token Type Desc Token Property API Token Can be generated from the account management portal Multiple tokens can be generated per user Partner Token Provided separately during agreement. Persistent and remains same throughout the account"},{"location":"enterprise/authentication-flow/#the-authentication-flow","title":"The Authentication Flow","text":""},{"location":"enterprise/authentication-flow/#step-1","title":"Step 1","text":"<p>Login to the portal https://ent.sparrowsms.com with your account login credentials  Navigate to the Token Management page and create / retrieve a token</p>"},{"location":"enterprise/authentication-flow/#step-2","title":"Step 2","text":"<p>Make an API request as below.  Endpoint <code>{{URL}}v1/autho/apitoken/login/</code> Method POST</p> <p>Payload</p> <pre><code>{\n    \"api_token\": \"&lt;api-token-obtained-from-generator&gt;\",\n    \"partner_token\": \"&lt;partner-token-provided&gt;\"\n}\n</code></pre> <p>Expected response JWT Token JWT Token expiry 24 hours Sample Response</p> <pre><code>{\n   \"data\": {\n       \"message\": \"Success\",\n       \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9\",\n       \"expires_on\": \"2022-08-21T18:00:55.400174+05:45\",\n   },\n   \"meta\": {},\n   \"result\": \"00\",\n   \"status\": \"OK\"\n}\n</code></pre>"},{"location":"enterprise/authentication-flow/#step-3","title":"Step 3","text":"<p>For any other APIs, the Bearer Token received from above request shall be used as Authorization Header argument</p>"},{"location":"enterprise/authentication-flow/#dashboard-login","title":"Dashboard Login","text":"<p>https://ent.sparrowsms.com</p>"},{"location":"enterprise/authentication-flow/#how-to-get-a-partner-token","title":"How to get a Partner Token","text":"<p>To receive a partner_token, API agreement needs to be made with the company. One partner_token is provided per account and needs to be handled with care. </p> <p>However, in case of api_token, multiple tokens can be generated from the portal as per the use case required. </p>"},{"location":"enterprise/authentication-flow/#error-messages","title":"Error Messages","text":"Error Message Desc Resolution Invalid Partner Token The partner token input is incorrectly typed or doesn't exist at all Verify the partner token Must include \"partner_token\" and \"api_token\" One of the tokens is missing in the input Verify the parameters Account is Expired Partner token is valid, but the partner account is already expired. Please talk to business / support for renewal process Invalid API Token Partner token is valid, API Token is not API Token Expired API Token expiry time exceeded. Generate again from the portal Unable to log in with provided credentials. Credentails invalid Please recheck both api_token and partner_token Invalid User Account is no longer active Please contact support for any sales / business related queries"},{"location":"enterprise/international-sms/","title":"International SMS Messaging for Nepal","text":""},{"location":"enterprise/international-sms/#viber-business-messaging-service-in-nepal","title":"Viber Business Messaging service in Nepal","text":"<p><code>Last Updated - 23rd May Version 1.0.4</code></p>"},{"location":"enterprise/international-sms/#api-endpoints","title":"API Endpoints","text":"Environment URL Production https://ent-api.sparrowsms.com/v1/intlsms/ Sandbox Coming soon"},{"location":"enterprise/international-sms/#available-apis","title":"Available APIs","text":"Name API HTTP Method International Message Compose API /compose/ POST Compose Status Report compose/report/:idx/ POST Destination and Rates compose/tarrif/ GET"},{"location":"enterprise/international-sms/#full-data-payload","title":"Full Data Payload","text":"<p>The payload will follow the syntax similar to Viber Messaging. </p> <pre><code>{\n   \"data\"  : {\n       \"text\":  \"\",\n       \"msg_type\": \"\"\n    }, \n   \"session\" : {\n       \"sender_name\": \"\",\n       \"tag\": [\"tag1\", \"tag2\"], \n       \"recipients\": [  \u2026 \u2026  \u2026 ] \n   }\n}\n</code></pre>"},{"location":"enterprise/international-sms/#description","title":"Description","text":"Field Value / Sample data <pre>{ \"text\": \"\" }</pre> data text The text message to sent data msg_type Different types of messages supported, eg. SMS, Flash, HLR, etc (availability of each type is dependent upon the destination and service availability from the carriers) session recipients (required) eg . <code>[no1,no2,no3\u2026]</code> List of distinct recipients, receiving the message. session sender_name Sender Name as allowed to the the API account as per agreement session tag List of Strings later used for reporting purposes"},{"location":"enterprise/international-sms/#validation-conditions","title":"Validation Conditions","text":"<ul> <li>Number Format : The recipient should always be in international standard E.164 format E.164 numbers can have a maximum of fifteen (15) digits and are usually written as follows:</li> </ul> <p><code>[+][country code][subscriber number including area code]</code>. </p> <p>An example of a US number in the E.164 format is +161000000000</p> <ul> <li>Dashes : The digits can be separated with dashes and the dashes will be ignored. eg. +91-980-xxx-xxxx</li> <li>Spaces : The digits can also be separated with spaces, and the spaces will also be ignored. </li> <li>Parenthesis : Any parenthesis in the numbers will also be removed. eg. +91-(1)-(5522942)</li> </ul>"},{"location":"enterprise/international-sms/#response","title":"Response","text":"<p>The following is a list of status responses that you will receive after sending a message</p> Status Code Result Code HTTP Response Detailed description OK 00 200 Successfully sent. DRAFT 01 200 Partial Success (Billing Error) DATA_ERROR 11 400 Message Sending Failed"},{"location":"enterprise/international-sms/#success-response","title":"Success Response","text":"<pre><code>{\n   \"data\": {\n       \"message\": \"Queued successfully\",\n       \"batch_id\": \"5c32728e-340f-43b6-898d-d2b24e8e1426\",\n       \"credits_required\": 2,\n       \"valid_recipients\": 2,\n       \"invalid_recipients\": []\n   },\n   \"result\": \"00\",\n   \"status\": \"OK\"\n}\n</code></pre> Data Field Detailed description message Human readable message suggesting the status of the compose action batch_id Unique Identifier for the batch. Callback and DLR lookups are provided based upon this identifier credits_required Maximum credits required for the full batch to proceed valid_recipients Total Valid recipients found in the list of recipients sent during API request invalid_recipients List of invalid recipients that were included in the API request (mobile number invalid)"},{"location":"enterprise/international-sms/#error-response","title":"Error Response","text":"<pre><code>{\n   \"data\": {\n       \"errors\": \"Billing Error\"\n   },\n   \"result\": \"11\",\n   \"status\": \"DATA_ERROR\"\n}\n</code></pre>"},{"location":"enterprise/international-sms/#compose-batch-reports","title":"Compose Batch Reports","text":"Name API HTTP Method Description Aggregated Report compose/report/:uuid GET Aggregated summary of the compose batch Delivered / Seen compose/report/:uuid/delivery GET Either delivered or seen Expired / Rejected compose/report/:uuid/failed GET Expired or Rejected due to invalid / unsubscribed numbers"},{"location":"enterprise/international-sms/#response-format","title":"Response Format","text":""},{"location":"enterprise/international-sms/#aggregated-summary-campaignreportuuid","title":"Aggregated Summary /campaign/report/:uuid","text":"<pre><code>{\n   \"data\": {\n       \"uuid\": \"b8d2516c-f78d-42d9-bdf4-6b5ec421402d\",\n       \"sender_name\": \"MyCompany\",\n       \"text\": \"Hello World\",\n       \"msg_type\": \"xxx\",\n       \"created_at\": \"2022-08-21T18:00:55.400174+05:45\",\n       \"tags\": [\n           \"tag1\",\n           \"tag2\"\n       ],\n       \"rejected\": 1,\n       \"accepted\": 0,\n       \"status\": \"dispatched\",\n       \"total\": 1,\n       \"accepted_percentage\": 0,\n       \"rejected_percentage\": 100,\n       \"performed_by\": {\n           \"uuid\": \"a2773d0f-99d7-4aac-9937-7629e99bee8e\",\n           \"name\": \"A Natural Person\",\n           \"email\": \"someone@example.com\"\n       }\n   },\n   \"meta\": {},\n   \"result\": \"00\",\n   \"status\": \"OK\"\n}\n</code></pre>"},{"location":"enterprise/international-sms/#aggregated-summary-campaignreportuuiddelivered","title":"Aggregated Summary /campaign/report/:uuid/delivered","text":"<pre><code>{\n   \"data\": {\n       \"uuid\": \"b8d2516c-f78d-42d9-bdf4-6b5ec421402d\",\n       \"sender_name\": \"My Company\",\n       \"campaign_name\": \"My Campaign\",\n       \"created_at\": \"2022-08-21T18:00:55.400174+05:45\",\n       \"records\": {\n           \"delivered\": [],\n           \"seen\": []\n       }\n   },\n   \"meta\": {},\n   \"result\": \"00\",\n   \"status\": \"OK\"\n}\n</code></pre>"},{"location":"enterprise/international-sms/#aggregated-summary-campaignreportuuidfailed","title":"Aggregated Summary /campaign/report/:uuid/failed","text":"<pre><code>{\n   \"data\": {\n       \"uuid\": \"b8d2516c-f78d-42d9-bdf4-6b5ec421402d\",\n       \"sender_name\": \"My Company\",\n       \"campaign_name\": \"My Campaign\",\n       \"created_at\": \"2022-08-21T18:00:55.400174+05:45\",\n       \"records\": {\n           \"rejected\": [],\n           \"expired\": []\n       }\n   },\n   \"meta\": {},\n   \"result\": \"00\",\n   \"status\": \"OK\"\n}\n</code></pre>"},{"location":"enterprise/international-sms/#message-types","title":"Message Types","text":"<p>(subjected to availability as per the carrier and destination)</p> SN msg_type description 1 plain Plain text (GSM 3.38 Character encoding) 2 flash Flash (GSM 3.38 Character encoding) 3 unicode Unicode 4 reserved reserved Reserved 5 wap WAP Push 6 plain_iso Plain text (ISO-8859-1 Character encoding) 7 uniflash Unicode Flash 8 flash_iso Flash (ISO-8859-1 Character encoding)"},{"location":"enterprise/secondfactor-as-service/","title":"SecondFactor","text":""},{"location":"enterprise/secondfactor-as-service/#we-are-lauching-this-soon","title":"We are lauching this soon","text":""},{"location":"enterprise/secondfactor-as-service/#stay-tuned-or-contact-our-support-for-more-details","title":"Stay tuned or contact our support for more details","text":""},{"location":"enterprise/viber/business-message/","title":"Viber Business Messaging service in Nepal","text":"<p><code>Last Updated - 16th February, 2023 Version 1.0.3</code></p>"},{"location":"enterprise/viber/business-message/#api-endpoints","title":"API Endpoints","text":"Environment URL Production https://ent-api.sparrowsms.com/v1/viber/ Sandbox Coming soon"},{"location":"enterprise/viber/business-message/#available-apis","title":"Available APIs","text":"Name API HTTP Method Promotional Message Compose API message/compose/ POST Transactional Message Compose API message/transactional/ POST Campaign Status Report campaign/report/:compose-uuid/ POST"},{"location":"enterprise/viber/business-message/#message-types","title":"Message types","text":"<p>All business accounts will be able to send any of the following message types based on their needs. Our message type selection contains text-based messages and richer content options,  which includes images, action button and file sharing. </p> <ul> <li>Transactional : message contains rich text only</li> <li>Promotional : message contains any of the following<ul> <li>Image</li> <li>Download file</li> <li>Action Button</li> </ul> </li> </ul>"},{"location":"enterprise/viber/business-message/#full-data-payload","title":"Full Data Payload","text":"<pre><code>{\n   \"data\"  : {\n       \"text\":  \"\",\n       \"image\": \"\"\n    }, \n    \"action\" : {\n       \"url\" : \"\",\n       \"caption\" : \"\",\n       \"filename\": \"\"\n   }, \n   \"session\" : {\n       \"sender_name\": \"\",\n       \"tag\": [\"tag1\", \"tag2\"], \n       \"recipients\": [  \u2026 \u2026  \u2026 ] \n   }\n}\n</code></pre>"},{"location":"enterprise/viber/business-message/#description","title":"Description","text":"Field Value / Sample data <pre>{ \"text\": \"\", \"image\": \"\" }</pre>text - A text message to sent image - Image attachment if to be included in the message action <pre>{ \"url\" : \"\", \"caption\" : \"\", \"filename\": \"\" } </pre> session recipients (required) eg . <code>[no1,no2,no3\u2026]</code> List of distinct recipients, receiving the message. session sender_name Sender Name as allowed by Viber agreement session tag List of Strings later used for reporting purposes"},{"location":"enterprise/viber/business-message/#coming-soon","title":"Coming soon","text":"<ul> <li>ttl = Not defined Defaults to 48 hrs</li> <li>ttl = Value in seconds - Keep the max value in seconds equivalent to 48 hours</li> </ul>"},{"location":"enterprise/viber/business-message/#sms-fallback-coming-soon","title":"SMS Fallback (Coming soon)","text":"<p><code>sms_fallback</code> Fallback SMS Content shall be forwarded if message wasn\u2019t delivered within the TTL specified</p>"},{"location":"enterprise/viber/business-message/#response","title":"Response","text":"<p>The following is a list of status responses that you will receive after sending a message</p> Status Code Result Code HTTP Response Detailed description OK 00 200 Successfully sent. DRAFT 01 200 Partial Success (Billing Error) DATA_ERROR 11 400 Message Sending Failed"},{"location":"enterprise/viber/business-message/#success-response","title":"Success Response","text":"<pre><code>{\n   \"data\": {\n       \"message\": \"Queued successfully\",\n       \"batch_id\": \"5c32728e-340f-43b6-898d-d2b24e8e1426\",\n       \"credits_required\": 2,\n       \"valid_recipients\": 2,\n       \"invalid_recipients\": []\n   },\n   \"result\": \"00\",\n   \"status\": \"OK\"\n}\n</code></pre> Data Field Detailed description message Human readable message suggesting the status of the compose action batch_id Unique Identifier for the batch. Callback and DLR lookups are provided based upon this identifier credits_required Maximum credits required for the full batch to proceed valid_recipients Total Valid recipients found in the list of recipients sent during API request invalid_recipients List of invalid recipients that were included in the API request (mobile number invalid)"},{"location":"enterprise/viber/business-message/#error-response","title":"Error Response","text":"<pre><code>{\n   \"data\": {\n       \"errors\": \"Billing Error\"\n   },\n   \"result\": \"11\",\n   \"status\": \"DATA_ERROR\"\n}\n</code></pre>"},{"location":"enterprise/viber/business-message/#campaign-reports","title":"Campaign Reports","text":"Name API HTTP Method Description Aggregated Report campaign/report/:uuid GET Aggregated summary of the campaign Delivered / Seen campaign/report/:uuid/delivery GET Either delivered or seen Expired / Rejected campaign/report/:uuid/failed GET Expired or Rejected due to invalid / unsubscribed numbers"},{"location":"enterprise/viber/business-message/#response-format","title":"Response Format","text":""},{"location":"enterprise/viber/business-message/#aggregated-summary-campaignreportuuid","title":"Aggregated Summary /campaign/report/:uuid","text":"<pre><code>{\n   \"data\": {\n       \"uuid\": \"b8d2516c-f78d-42d9-bdf4-6b5ec421402d\",\n       \"sender_name\": \"Sparrow Test One Way\",\n       \"campaign_name\": \"My Campaign\",\n       \"msg_type\": \"p\",\n       \"text\": \"Hello World\",\n       \"image\": \"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg\",\n       \"created_at\": \"2022-08-21T18:00:55.400174+05:45\",\n       \"tags\": [\n           \"tag1\",\n           \"tag2\"\n       ],\n       \"rejected\": 1,\n       \"accepted\": 0,\n       \"status\": \"dispatched\",\n       \"total\": 1,\n       \"accepted_percentage\": 0,\n       \"rejected_percentage\": 100,\n       \"performed_by\": {\n           \"uuid\": \"a2773d0f-99d7-4aac-9937-7629e99bee8e\",\n           \"name\": \"A Natural Person\",\n           \"email\": \"someone@example.com\"\n       }\n   },\n   \"meta\": {},\n   \"result\": \"00\",\n   \"status\": \"OK\"\n}\n</code></pre>"},{"location":"enterprise/viber/business-message/#aggregated-summary-campaignreportuuiddelivered","title":"Aggregated Summary /campaign/report/:uuid/delivered","text":"<pre><code>{\n   \"data\": {\n       \"uuid\": \"b8d2516c-f78d-42d9-bdf4-6b5ec421402d\",\n       \"sender_name\": \"Sparrow Test One Way\",\n       \"campaign_name\": \"My Campaign\",\n       \"created_at\": \"2022-08-21T18:00:55.400174+05:45\",\n       \"records\": {\n           \"delivered\": [],\n           \"seen\": []\n       }\n   },\n   \"meta\": {},\n   \"result\": \"00\",\n   \"status\": \"OK\"\n}\n</code></pre>"},{"location":"enterprise/viber/business-message/#aggregated-summary-campaignreportuuidfailed","title":"Aggregated Summary /campaign/report/:uuid/failed","text":"<pre><code>{\n   \"data\": {\n       \"uuid\": \"b8d2516c-f78d-42d9-bdf4-6b5ec421402d\",\n       \"sender_name\": \"Sparrow Test One Way\",\n       \"campaign_name\": \"My Campaign\",\n       \"created_at\": \"2022-08-21T18:00:55.400174+05:45\",\n       \"records\": {\n           \"rejected\": [],\n           \"expired\": []\n       }\n   },\n   \"meta\": {},\n   \"result\": \"00\",\n   \"status\": \"OK\"\n}\n</code></pre>"},{"location":"enterprise/viber/dlr/","title":"Viber Business Messaging DLR Callback","text":"<p>There are two types of DLR messages that can be dispatched to the endpoints provided by API Consumer.</p> <ul> <li>Individual recipient DLR Status</li> <li>Batch Complete Status</li> </ul>"},{"location":"enterprise/viber/dlr/#individual-recipient-dlr","title":"Individual recipient DLR","text":"<p>Each recipient in a batch can trigger DLR events. Following events trigger the DLR callback. </p> <ul> <li>Is Delivered Once</li> <li>Is Seen Once</li> <li>Is Expired</li> </ul>"},{"location":"enterprise/viber/dlr/#why-once","title":"Why Once ?","text":"<p>A viber message recipient user can have multiple devices logged in at the same time. Viber considers each event in a device as an unique event and sends the DLR. However is the message is delivered to any one of the device and is seen through any one of the online devices, its sufficient that the recipient has seen the message.  Any future events of delivery can be discarded gracefully. </p> <p>The payload of each event looks like below</p> <pre><code>{\n    \"dlr_data\": [\n        {\n            \"ts\": \"timestamp-of-the-event\",\n            \"to\": \"viber-recipient\",\n            \"id\": \"uuid-of-the-message-batch\",\n            \"status\": \"2-digit-integer-representation\"\n        },{\n            \"ts\": \"2023-01-23 14:31:30\",\n            \"to\": \"97798xxxxxxxx\",\n            \"id\": \"92dc85b5-2f3c-4523-aaea-6fb2ee762b93\",\n            \"status\": \"00\"\n        },\n        {\"...\": \"\"}\n    ], \n    \"dlr_type\": \"instant\"\n}\n</code></pre>"},{"location":"enterprise/viber/dlr/#dlr-status-description","title":"DLR Status Description","text":"Value Description 00 Delivered Once 01 Seen Once 02 Expired and could'nt deliver to any of the devices"},{"location":"enterprise/viber/dlr/#batch-complete-dlr","title":"Batch Complete DLR","text":"<p>When all the recpients in a batch has been analysed and dispatched to Viber, viber either rejects or accepts the message. The batch complete DLR sends the count of rejected and accepted messages, and the recipients that were rejected for number not being a registered number or some other reasons. </p> <p>The payload of Batch Complete DLR looks like below</p> <pre><code>{\n    \"dlr_data\": {\n        \"uuid\": \"aef341a9-1e28-4238-98a0-f8c326bae334\",\n        \"status\": \"dispatched\",\n        \"accepted_count\": \"10\",\n        \"rejected_count\": \"2\",\n        \"rejected_numbers\": [\"98xxxxxxxx\", \"98xxxxxxxx\"]\n    }\n    \"dlr_type\": \"batch_complete\"\n}\n</code></pre>"},{"location":"enterprise/viber/documentation/","title":"Viber services in Nepal","text":"<p>Sparrow SMS recently launched its Enterprise Messaging platform (Mockingbird) to provide Multi-Channel Enterprise Messaging Gateway service. </p>"},{"location":"enterprise/viber/documentation/#services-currently-available","title":"services currently available","text":"<ul> <li>Viber Business Messaging (API Documentation)</li> <li>Viber Bot service (API Documentation)</li> </ul>"},{"location":"enterprise/viber/viber-bot/","title":"Viber Bot based Application services","text":"<p>Feature coming soon</p>"},{"location":"sms/documentation/","title":"API Endpoint","text":"<p>Sparrow SMS receives requests via a single standard endpoint as below:  </p> <p>URL : api.sparrowsms.com/v2 </p>"},{"location":"sms/documentation/#1-outgoing","title":"1. Outgoing","text":"<p>Our outgoing API enables you to send sms, get credits details.</p>"},{"location":"sms/documentation/#i-send-sms","title":"i. Send SMS","text":"<p>Outgoing or Push or MT (Mobile Terminated) messages are sent from Sparrow SMS Gateway server to the intended recipients mobile phone.  </p> <p>**Check documentation **</p>"},{"location":"sms/documentation/#ii-credits","title":"ii. Credits","text":"<p>Check available, consumed credits in Sparrow SMS account</p> <p>**Check documentation **</p>"},{"location":"sms/documentation/#2-incoming","title":"2. Incoming","text":"<p>Our incoming API enables you to recieve sms, process request and reply back with reply.</p> <p>**Check documentation **</p>"},{"location":"sms/examples/","title":"HTTP Request Examples","text":""},{"location":"sms/examples/#mobile-terminated-push-sms","title":"Mobile Terminated (Push SMS)","text":"<p>Outgoing or Push or MT (Mobile Terminated) messages are sent from Sparrow SMS Gateway server to the intended recipients mobile phone. Proceed to examples</p>"},{"location":"sms/examples/#credits-api","title":"Credits API","text":"<p>Credits API provides access to the available credits, consumed credits, credit policy and expiry information. Proceed to examples</p>"},{"location":"sms/examples/#mobile-originated","title":"Mobile Originated","text":"<p>Incoming or Pull or MO (Mobile Originated) messages are received to Sparrow SMS Gateway server, when a mobile phone sends some text to one of our shortcodes. Proceed to examples</p>"},{"location":"sms/examples_credits/","title":"Examples (Credits)","text":""},{"location":"sms/examples_credits/#curl","title":"Curl","text":"<pre><code>\n    curl -s http://api.sparrowsms.com/v2/credit/ \\\n        -F token='&lt;token-provided&gt;' \\\n\n</code></pre>"},{"location":"sms/examples_credits/#php","title":"Php","text":"<pre><code>\n    $api_url = \"http://api.sparrowsms.com/v2/credit/?\".\n        http_build_query(array(\n            'token' =&gt; '&lt;token-provided&gt;',\n\n    $response = file_get_contents($api_url);\n\n\n</code></pre>"},{"location":"sms/examples_credits/#python","title":"Python","text":"<pre><code>\n    import requests\n\n    r = requests.get(\n            \"http://api.sparrowsms.com/v2/credit/\",\n            params={'token' : '&lt;token-provided&gt;'})\n\n    status_code = r.status_code\n    response = r.text\n    response_json = r.json()\n\n\n</code></pre>"},{"location":"sms/examples_credits/#c-c-sharp","title":"C# (C-sharp)","text":"<pre><code>\n    using System.Collections.Specialized;\n    using System.IO;\n    using System.Net;\n    using System.Text;\n\n    namespace SparrowSMSTest{\n\n    class Program{\n        static void Main(string[] args)\n        {\n            var getResponseTest = GetCredits('&lt;token-provided&gt;');\n        }\n\n        private static string GetCredits(string token)\n        {\n            using (var client = new WebClient())\n            {\n                string parameters = \"?\";\n                parameters += \"token=\" + token;\n                var responseString = client.DownloadString(\"http://api.sparrowsms.com/v2/credit/\" + parameters);\n                return responseString;\n            }\n        }\n    }\n\n</code></pre>"},{"location":"sms/examples_incoming/","title":"Examples (Incoming SMS)","text":""},{"location":"sms/examples_incoming/#php","title":"Php","text":"<pre><code>\n    // STEP 1\n    // incoming request parameters\n\n    $from = $_GET[\"from\"]; // sms sender\n    $to = $_GET[\"to\"]; // shortcode\n    $keyword = $_GET[\"keyword\"]; // first word\n    $text = $_GET[\"text\"]; // the complete text\n    $timestamp = time();\n\n    // STEP 2\n    // build your logic on how to respond the incoming request\n\n    switch($keyword){\n        case \"one\":\n            $reply = \"You (\". $from .\") have been subscribed to campaign one\";\n            break;\n        case \"two\":\n            $reply = \"You (\". $from .\") have been subscribed to campaign two\";\n            break;\n        default:\n            $reply = \"Invalid campaign name\";\n            break;\n    }\n\n    // STEP 3\n    // may be you need to save the request to your own database\n    // @optional\n\n    mysql_connect(\"localhost\", \"username\", \"password\");\n    mysql_select_db(\"sparrow_sms\");\n\n    mysql_query(\"insert into logs_incoming\n    (`from`, `to`, `keyword`, `text`, `timestamp`)\n    values ('\".mysql_real_escape_string($from).\"',\n    '\".mysql_real_escape_string($to).\"',\n    '\".mysql_real_escape_string($keyword).\"',\n    '\".mysql_real_escape_string($text).\"',\n    '\".$timestamp.\"'\n    )\");\n\n    // STEP 4\n    // send reply back to Sparrow SMS\n    // This has to be STRICTLY 160 chars (max)\n\n    die($reply);\n\n\n</code></pre>"},{"location":"sms/examples_outgoing/","title":"Examples (Outgoing SMS)","text":""},{"location":"sms/examples_outgoing/#curl","title":"Curl","text":"<pre><code>\n    curl -s http://api.sparrowsms.com/v2/sms/ \\\n        -F token='&lt;token-provided&gt;' \\\n        -F from='&lt;Identity&gt;' \\\n        -F to='&lt;comma_separated 10-digit mobile numbers&gt;' \\\n        -F text='SMS Message to be sent'\n\n</code></pre>"},{"location":"sms/examples_outgoing/#php","title":"Php","text":"<p>**GET Method: **</p> <pre><code>\n    $api_url = \"http://api.sparrowsms.com/v2/sms/?\".\n        http_build_query(array(\n            'token' =&gt; '&lt;token-provided&gt;',\n            'from'  =&gt; '&lt;Identity&gt;',\n            'to'    =&gt; '&lt;comma_separated 10-digit mobile numbers&gt;',\n            'text'  =&gt; 'SMS Message to be sent'));\n\n    $response = file_get_contents($api_url);\n\n\n</code></pre> <p>Example:  http_build_query(array( 'token' =&gt; 'aslkd1232adkadsf', 'from' =&gt; \u2018Demo', 'to' =&gt; \u20189802005009', 'text' =&gt; \u2018Hello! This is a test message from Sparrow SMS'));</p> <p>**POST Method: **</p> <pre><code>\n    $args = http_build_query(array(\n        'token' =&gt; '&lt;token-provided&gt;',\n        'from'  =&gt; '&lt;Identity&gt;',\n        'to'    =&gt; '&lt;comma_separated 10-digit mobile numbers&gt;',\n        'text'  =&gt; 'SMS Message to be sent'));\n\n    $url = \"http://api.sparrowsms.com/v2/sms/\";\n\n    # Make the call using API.\n    $ch = curl_init();\n    curl_setopt($ch, CURLOPT_URL, $url);\n    curl_setopt($ch, CURLOPT_POST, 1);\n    curl_setopt($ch, CURLOPT_POSTFIELDS,$args);\n    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\n    // Response\n    $response = curl_exec($ch);\n    $status_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n    curl_close($ch);\n\n\n</code></pre>"},{"location":"sms/examples_outgoing/#python","title":"Python","text":"<p>**GET Method: **</p> <pre><code>\n    import requests\n\n    r = requests.get(\n            \"http://api.sparrowsms.com/v2/sms/\",\n            params={'token' : '&lt;token-provided&gt;',\n                  'from'  : '&lt;Identity&gt;',\n                  'to'    : '&lt;comma_separated 10-digit mobile numbers&gt;',\n                  'text'  : 'SMS Message to be sent'})\n\n    status_code = r.status_code\n    response = r.text\n    response_json = r.json()\n\n\n</code></pre> <p>**POST Method: **</p> <pre><code>\n    import requests\n\n    r = requests.post(\n            \"http://api.sparrowsms.com/v2/sms/\",\n            data={'token' : '&lt;token-provided&gt;',\n                  'from'  : '&lt;Identity&gt;',\n                  'to'    : '&lt;comma_separated 10-digit mobile numbers&gt;',\n                  'text'  : 'SMS Message to be sent'})\n\n    status_code = r.status_code\n    response = r.text\n    response_json = r.json()\n\n</code></pre>"},{"location":"sms/examples_outgoing/#c-c-sharp","title":"C# (C-sharp)","text":"<p>**GET Method: **</p> <pre><code>\n    using System.Collections.Specialized;\n    using System.IO;\n    using System.Net;\n    using System.Text;\n\n    namespace SparrowSMSTest{\n\n    class Program{\n        static void Main(string[] args)\n        {\n            var getResponseTest = GetSendSMS('&lt;Identity&gt;', '&lt;token-provided&gt;', '&lt;comma_separated 10-digit mobile numbers&gt;', 'SMS Message to be sent');\n        }\n\n        private static string GetSendSMS(string from, string token, string to, string text)\n        {\n            using (var client = new WebClient())\n            {\n                string parameters = \"?\";\n                parameters += \"from=\" + from;\n                parameters += \"&amp;to=\" + to;\n                parameters += \"&amp;text=\" + text;\n                parameters += \"&amp;token=\" + token;\n                var responseString = client.DownloadString(\"http://api.sparrowsms.com/v2/sms/\" + parameters);\n                return responseString;\n            }\n        }\n    }\n\n</code></pre> <p>**POST Method: **</p> <pre><code>\n    using System.Collections.Specialized;\n    using System.Net;\n    using System.Text;\n\n    namespace SparrowSMSTest{\n        class Program{\n            static void Main(string[] args){\n                var responseTest = PostSendSMS('&lt;Identity&gt;', '&lt;token-provided&gt;', '&lt;comma_separated 10-digit mobile numbers&gt;', 'SMS Message to be sent');\n            }\n\n            private static string PostSendSMS(string from, string token, string to, string text){\n                using (var client = new WebClient()){\n                    var values = new NameValueCollection();\n                    values[\"from\"] = from;\n                    values[\"token\"] = token;\n                    values[\"to\"] = to;\n                    values[\"text\"] = text;\n                    var response = client.UploadValues(\"http://api.sparrowsms.com/v2/sms/\", \"Post\", values);\n                    var responseString = Encoding.Default.GetString(response);\n                    return responseString;\n                }\n            }\n        }\n    }\n\n</code></pre>"},{"location":"sms/incoming/","title":"Receive SMS / Incoming / Pull / MO (Mobile Originated)","text":""},{"location":"sms/incoming/#shortcode","title":"Shortcode","text":"<p>Shortcode is four digit number to which user can send SMS from any telecom. Benefits of Shortcodes are: 1. Easy to remember 2. Provides direct connectivity to Telecom 3. Shortcode can have different tarrifs like (Rs. 1-5)  </p>"},{"location":"sms/incoming/#keyword","title":"Keyword","text":"<p>First word of SMS sent by user is Keyword, it is used to identify the action / service requested. </p>"},{"location":"sms/incoming/#sub-keyword","title":"Sub Keyword","text":"<p>Second Keyword of SMS sent by user is called Sub Keyword. Its optional and depends upon the campaign</p>"},{"location":"sms/incoming/#parameters","title":"Parameters","text":"<p>Settings</p> <pre><code>\n    URL           : Public URL where the incoming SMS has to be forwarded.\n    Keyword       : Keyword that has to be forwarded.\n    Shortcode     : Shortcode to which, user has to send SMS.\n    Default Reply : Default response that has to be sent to user, \n                    incase request to url fail.\n\n</code></pre> <p>Request</p> <pre><code>\n    GET request is sent to the URL provided with following arguments:\n\n    from    : Subscribers number sending SMS.\n    to      : Shortcode to which subscriber has sent SMS.\n    text    : Complete SMS sent by user.\n    keyword : Keyword of SMS sent.\n\n\n</code></pre>"},{"location":"sms/incoming/#response","title":"Response","text":"<p>URL must process the request and send text response of maximum 160 characters with status code 200 or 202. Incase of any other response code, default reply will be sent to user as SMS reply.</p> <p>Proceed to examples</p>"},{"location":"sms/outgoing_credits/","title":"Credits","text":"<p>It can be used to know about the available credits, consumed credits.</p>"},{"location":"sms/outgoing_credits/#supported-http-request-method","title":"Supported HTTP request method:","text":"<pre><code>\n    GET\n\n</code></pre>"},{"location":"sms/outgoing_credits/#method","title":"Method","text":"<pre><code>\n    /credit/\n\n</code></pre>"},{"location":"sms/outgoing_credits/#parameters","title":"Parameters","text":"<pre><code>\n    token : Token generated from our website.\n\n</code></pre>"},{"location":"sms/outgoing_credits/#responses","title":"Responses","text":""},{"location":"sms/outgoing_credits/#valid-response","title":"Valid Response","text":"<p><code>Status Code: 200</code></p> <p>**Response Message: **</p> <pre><code>\n    {\n        \"credits_available\" : &lt;credits-available&gt;,\n        \"credits_consumed\"  : &lt;credits-consumed&gt;,\n        \"response_code\"     : 200\n    }\n\n</code></pre>"},{"location":"sms/outgoing_credits/#invalid-response","title":"Invalid Response","text":"<p><code>Status Code: 403</code></p> <p>**Error Messages: **</p> <pre><code>\n    {\"response_code\":1001,\"response\":\"Invalid IP Address\"}\n    {\"response_code\":1002,\"response\":\"Invalid Token\"}\n    {\"response_code\":1003,\"response\":\"Account Inactive\"}\n    {\"response_code\":1004,\"response\":\"Account Inactive\"}\n    {\"response_code\":1005,\"response\":\"Account has been expired\"}\n    {\"response_code\":1006,\"response\":\"Account has been expired\"}\n    {\"response_code\":1012,\"response\":\"No Credits Available\"}\n\n</code></pre> <p>Proceed to examples</p>"},{"location":"sms/outgoing_sendsms/","title":"Send SMS / Outgoing / Push / MT (Mobile Terminated)","text":""},{"location":"sms/outgoing_sendsms/#supported-http-request-methods","title":"Supported HTTP request methods:","text":"<pre><code>\n    GET\n    POST\n\n</code></pre>"},{"location":"sms/outgoing_sendsms/#method","title":"Method","text":"<pre><code>\n    /sms/\n\n</code></pre>"},{"location":"sms/outgoing_sendsms/#parameters","title":"Parameters","text":"<p>Mandatory Fields</p> <pre><code>\n    token : Token generated from our website.\n    from  : It should be the identity provided to you.\n    to    : Comma Separated 10-digit mobile numbers.\n    text  : SMS Message to be sent.\n\n</code></pre> <p>Optional Fields</p> <pre><code>\n</code></pre>"},{"location":"sms/outgoing_sendsms/#responses","title":"Responses","text":""},{"location":"sms/outgoing_sendsms/#valid-response","title":"Valid Response","text":"<p><code>Status Code: 200</code></p> <p>**Response Message: **</p> <pre><code>\n    {\n        \"count\": number_of_sms_sent, \n        \"response_code\": 200,\n        \"response\": \"number_of_sms_sent mesages has been queued for delivery\"\n    }\n\n</code></pre>"},{"location":"sms/outgoing_sendsms/#invalid-response","title":"Invalid Response","text":"<p><code>Status Code: 403</code></p> <p>**Error Messages: **</p> <pre><code>\n    {\"response_code\":1000,\"response\":\"A required field is missing\"}\n    {\"response_code\":1001,\"response\":\"Invalid IP Address\"}\n    {\"response_code\":1002,\"response\":\"Invalid Token\"}\n    {\"response_code\":1003,\"response\":\"Account Inactive\"}\n    {\"response_code\":1004,\"response\":\"Account Inactive\"}\n    {\"response_code\":1005,\"response\":\"Account has been expired\"}\n    {\"response_code\":1006,\"response\":\"Account has been expired\"}\n    {\"response_code\":1007,\"response\":\"Invalid Receiver\"}\n    {\"response_code\":1008,\"response\":\"Invalid Sender\"}\n    {\"response_code\":1010,\"response\":\"Text cannot be empty\"}\n    {\"response_code\":1011,\"response\":\"No valid receiver\"}\n    {\"response_code\":1012,\"response\":\"No Credits Available\"}\n    {\"response_code\":1013,\"response\":\"Insufficient Credits\"}\n\n</code></pre> <p>Proceed to examples</p>"}]}